name: Deploy Next.js to GitHub Pages

on:
  push:
    branches: [master]   # đổi thành main nếu repo dùng main
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Print platform (debug)
        run: |
          node -p "process.platform + ' ' + process.arch"
          uname -a

      - name: Install deps (clean)
        run: npm ci

      # Đảm bảo toolchain Tailwind v4 + lightningcss + Oxide native cho linux-x64-gnu
      - name: Ensure Tailwind v4 native deps
        run: |
          # lightningcss (native)
          npm ls lightningcss >/dev/null 2>&1 || npm i -D lightningcss
          npm rebuild lightningcss

          # Oxide core + gói platform-specific cho Linux x64 GNU
          npm ls @tailwindcss/oxide >/dev/null 2>&1 || npm i -D @tailwindcss/oxide
          npm ls @tailwindcss/oxide-linux-x64-gnu >/dev/null 2>&1 || npm i -D @tailwindcss/oxide-linux-x64-gnu

      # Thử require Oxide native, nếu fail -> fallback WASM
      - name: Probe @tailwindcss/oxide native
        id: probe_oxide
        run: |
          node -e "try{require('@tailwindcss/oxide');console.log('✅ oxide native OK')}catch(e){console.error('❌ oxide native failed');process.exit(1)}"
        continue-on-error: true

      - name: Fallback Oxide to WASM (if needed)
        if: steps.probe_oxide.outcome == 'failure'
        run: |
          echo "Using Oxide WASM fallback"
          npm i -D @tailwindcss/oxide-wasm
          # Biến môi trường (cho các step sau) để ép dùng WASM thay vì native
          echo "TAILWIND_DISABLE_OXIDE=1" >> $GITHUB_ENV

      # (tuỳ) probe lightningcss lại; nếu fail có thể fallback sang WASM của lightningcss
      - name: Probe lightningcss native
        id: probe_lc
        run: |
          node -e "try{require('lightningcss');console.log('✅ lightningcss native OK')}catch(e){console.error('❌ lightningcss native failed');process.exit(1)}"
        continue-on-error: true

      - name: Fallback lightningcss to WASM (if needed)
        if: steps.probe_lc.outcome == 'failure'
        run: |
          npm i -D lightningcss-wasm
          echo "LIGHTNINGCSS_FORCE_WASM=1" >> $GITHUB_ENV

      - name: Build (Next export -> out/)
        run: npm run build
        env:
          # Giữ target env cho lightningcss; nếu ở trên bật FORCE_WASM/TAILWIND_DISABLE_OXIDE
          # thì chúng đã có trong $GITHUB_ENV rồi.
          LIGHTNINGCSS_TARGET_ENV: nodejs

      - name: Verify out/
        run: test -d out && ls -la out

      - name: Upload Pages artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./out

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4
